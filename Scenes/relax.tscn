[gd_scene load_steps=13 format=2]

[ext_resource path="res://Scripts/relax.gd" type="Script" id=1]
[ext_resource path="res://Graphics/relax_screen.png" type="Texture" id=2]
[ext_resource path="res://Graphics/Buttons/Back/normal.png" type="Texture" id=3]
[ext_resource path="res://Graphics/Buttons/Back/down.png" type="Texture" id=4]
[ext_resource path="res://Graphics/Buttons/Back/over.png" type="Texture" id=5]
[ext_resource path="res://Graphics/Buttons/Times/30s.png" type="Texture" id=6]
[ext_resource path="res://Graphics/Fonts/small_pixel.ttf" type="DynamicFontData" id=7]

[sub_resource type="Animation" id=1]
resource_name = "fade_in"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.5 ),
"transitions": PoolRealArray( 1.56917, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "fade_out"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 0.210224, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

var mouse_entered = false

func _ready():
	pass
	
func _process(delta):
	if(mouse_entered):
		position = position.linear_interpolate(Vector2(-5, 5), 0.1)
	else:
		position = position.linear_interpolate(Vector2(0, 0), 0.1)

func _on_back_mouse_entered():
	mouse_entered = true

func _on_back_mouse_exited():
	mouse_entered = false
"

[sub_resource type="GDScript" id=5]
script/source = "extends TextureButton

func _on_30s_mouse_entered():
	modulate = Color(\"815b40\").lightened(0.2)

func _on_30s_mouse_exited():
	modulate = Color(\"815b40\")
"

[sub_resource type="DynamicFont" id=4]
font_data = ExtResource( 7 )

[node name="relax" type="Node2D"]
script = ExtResource( 1 )

[node name="screen" type="Sprite" parent="."]
scale = Vector2( 4, 4 )
texture = ExtResource( 2 )
centered = false

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
visible = false
modulate = Color( 1, 1, 1, 0.987654 )
margin_right = 960.0
margin_bottom = 540.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/ColorRect"]
autoplay = "fade_in"
anims/fade_in = SubResource( 1 )
anims/fade_out = SubResource( 2 )

[node name="back" type="Node2D" parent="."]
script = SubResource( 3 )

[node name="back" type="TextureButton" parent="back"]
margin_left = 552.0
margin_top = 16.0
margin_right = 621.0
margin_bottom = 56.0
rect_scale = Vector2( 4, 4 )
texture_normal = ExtResource( 3 )
texture_pressed = ExtResource( 4 )
texture_hover = ExtResource( 5 )

[node name="times" type="Node2D" parent="."]

[node name="30s" type="TextureButton" parent="times"]
modulate = Color( 0.505882, 0.356863, 0.25098, 1 )
margin_left = 476.0
margin_top = 360.0
margin_right = 510.0
margin_bottom = 365.0
rect_scale = Vector2( 4, 4 )
texture_normal = ExtResource( 6 )
script = SubResource( 5 )

[node name="instructions" type="Label" parent="."]
modulate = Color( 0.505882, 0.356863, 0.25098, 1 )
margin_left = 48.0
margin_top = 159.0
margin_right = 397.0
margin_bottom = 493.0
custom_fonts/font = SubResource( 4 )
text = "Okay, so this bit of the game is kind of on the honour system.

Select an amount of time, close your eyes and try to focus all your attention on your breathing.

You can also choose any other point of focus if breathing doesn't do it for you.

That's it! :D Just wait for the timer to run out, and it'll remind you when to get back to your computer. 

Enjoy! <3"
align = 1
valign = 1
autowrap = true

[connection signal="animation_finished" from="CanvasLayer/ColorRect/AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="mouse_entered" from="back/back" to="back" method="_on_back_mouse_entered"]
[connection signal="mouse_exited" from="back/back" to="back" method="_on_back_mouse_exited"]
[connection signal="pressed" from="back/back" to="." method="_on_back_pressed"]
[connection signal="mouse_entered" from="times/30s" to="times/30s" method="_on_30s_mouse_entered"]
[connection signal="mouse_exited" from="times/30s" to="times/30s" method="_on_30s_mouse_exited"]
[connection signal="pressed" from="times/30s" to="." method="time_selected" binds= [ "30s" ]]
